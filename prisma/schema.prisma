// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}


//better-auth tables

model User{
  id String @id @default(cuid())
  name String?
  email String @unique
  emailVerified Boolean @default(false)
  image String? 
  password String? 
  createdAt DateTime @default(now())
  sessions Session[]
  chatSessions ChatSession[]
}

model Session{
  id String @id @default(cuid())
  userId String
  expiresAt DateTime
  token String
  user User @relation(fields: [userId], references: [id])

}

model Verification{
  id String @default(cuid())
  identifier String
  value String @unique
  expiresAt DateTime
}


model ChatSession {
  id        String    @id @default(cuid())
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  messages  Message[]
}

model Message {
  id            String      @id @default(cuid())
  content       String
  role          Role
  createdAt     DateTime    @default(now())
  chatSessionId String
  chatSession   ChatSession @relation(fields: [chatSessionId], references: [id])
}

enum Role {
  USER
  MODEL
}